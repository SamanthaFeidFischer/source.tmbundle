<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

# read shell variables (set these per language)
$s      = ENV['TM_COMMENT_START'] || "# "
$e      = ENV['TM_COMMENT_END']   || ""
$m      = ENV['TM_COMMENT_MODE']  || "line"
$t      = STDIN.read

# needs to escape them for use in regex
# because we can't do \Q...\E
$s_esc  = $s.gsub(/[\\|()\[\].?*+{}^$]/, '\\\\\&amp;')
$e_esc  = $e.gsub(/[\\|()\[\].?*+{}^$]/, '\\\\\&amp;')

case $m
when "line"  # apply comment line-by-line
  if $t =~ /\A\s*#{$s_esc}/
    print $t.gsub(/^(\s*)#{$s_esc}(.*)#{$e_esc}(\s*)$/, '\1\2\3')
  else
    print $t.gsub(/^.*$/, "#{$s}\\&amp;#{$e}")
  end
when "block" # apply comment around selection
  $re = /\A(\s*)#{$s_esc}(.*)#{$e_esc}(\s*)\z/m
  if $t =~ $re
    print $t.gsub($re, '\1\2\3')
  else
    print $s, $t, $e
  end
end</string>
	<key>fallbackInput</key>
	<string>line</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>@/</string>
	<key>name</key>
	<string>Comment Line / Selection</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>uuid</key>
	<string>73EAE95D-A09C-4FC2-B4E3-42505678B57E</string>
</dict>
</plist>
